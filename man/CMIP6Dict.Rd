% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dict.R
\name{CMIP6Dict}
\alias{CMIP6Dict}
\alias{cmip6_dict}
\title{CMIP6 Controlled Vocabularies (CVs) and Data Request Dictionary}
\usage{
cmip6_dict()
}
\description{
The \code{CMIP6Dict} object provides functionalities to fetch the latested CMIP6
Controlled Vocabularies (CVs) and Data Request information.
}
\details{
The CMIP6 CVs defines a well-defined set of global attributes that are
recorded in each CMIP6 model output, providing information necessary for
interpreting the data.

The CMIP6 Data Request defines all the quantities from CMIP6 simulations that
should be archived. This includes both quantities of general interest needed
from most of the CMIP6-endorsed model intercomparison projects (MIPs) and
quantities that are more specialized and only of interest to a single
endorsed MIP.

The data of CVs for use in CMIP6 is stored as JSON files in a
\href{https://github.com/WCRP-CMIP/CMIP6_CVs}{GitHub Repo}, while the Data Request
data is stored a Microsoft Excel file (\code{CMIP6_MIP_tables.xlsx}) in a
\href{http://proj.badc.rl.ac.uk/svn/exarch/CMIP6dreq/trunk}{Subversion repo}.
\code{CMIP6Dict} object is able to fetch those files and parse them.

For more information, please see:
\itemize{
\item \href{https://docs.google.com/document/d/1h0r8RZr_f3-8egBMMh7aqLwy3snpD6_MrDz1q8n5XUk/edit}{CMIP6 Global Attributes, DRS, Filenames, Directory Structure, and CV's}
\item \href{https://wcrp-cmip.github.io/WGCM_Infrastructure_Panel/CMIP6/data_request.html}{CMIP6 Data Request}
}
}
\examples{
\dontrun{

# create a new CMIP6Dict object
dict <- cmip6_dict()

# by default, there is no data when the CMIP6Dict was created
dict$is_empty()

# fetch and parse all CVs and Data Request data
dict$build()

# get the version of CVs nand Data Request
dict$version()

# get the last modified time for each CV and Data Request
dict$timestamp()

# get the time when the dict was built
dict$built_time()

# check if there is updates of CVs and Data Request
dict$update()

# list the data of CVs
dict$list("activity")
dict$list("experiment")
dict$list("sub_experiment")
dict$list("institution")
dict$list("source")
dict$list("table")
dict$list("frequency")
dict$list("grid_label")
dict$list("realm")
dict$list("source_type")
dict$list("req_global_atts")
dict$list("variable")

# save the dict object for later usage
# default location is the value of global option "epwshiftr.dir"
dict$save()

# the saved dict object can be reloaded
new_dict <- cmip6_dict()
new_dict$load()

}
}
\author{
Hongyuan Jia
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-version}{\code{CMIP6Dict$version()}}
\item \href{#method-is_empty}{\code{CMIP6Dict$is_empty()}}
\item \href{#method-timestamp}{\code{CMIP6Dict$timestamp()}}
\item \href{#method-built_time}{\code{CMIP6Dict$built_time()}}
\item \href{#method-build}{\code{CMIP6Dict$build()}}
\item \href{#method-list}{\code{CMIP6Dict$list()}}
\item \href{#method-update}{\code{CMIP6Dict$update()}}
\item \href{#method-save}{\code{CMIP6Dict$save()}}
\item \href{#method-load}{\code{CMIP6Dict$load()}}
\item \href{#method-print}{\code{CMIP6Dict$print()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-version"></a>}}
\if{latex}{\out{\hypertarget{method-version}{}}}
\subsection{Method \code{version()}}{
Get the version of CVs and Data Request
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$version()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of two element:
\itemize{
\item \code{cv}: A \link{numeric_version} object giving the version of CVs
\item \code{req}: A \link{numeric_version} object giving the version of Data
Request
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_empty"></a>}}
\if{latex}{\out{\hypertarget{method-is_empty}{}}}
\subsection{Method \code{is_empty()}}{
Is it an empty CMIP6Dict?

\verb{$is_empty()} checks if this \code{CMIP6Dict} is empty, i.e. the
\verb{$build()} or \verb{$load()} method hasn't been called yet and there is no
data of CVs and Data Request.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$is_empty()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A single logical value of \code{TRUE} or \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-timestamp"></a>}}
\if{latex}{\out{\hypertarget{method-timestamp}{}}}
\subsection{Method \code{timestamp()}}{
Get the last modified time for CVs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$timestamp()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of 14 \link[=POSIXct]{DateTime}s:
\itemize{
\item \code{cv}: The last modified time for the whole CV collection
\item \code{activity}: The last modified time for the CV \code{activity_id}
\item \code{experiment}: The last modified time for the CV \code{experiment_id}
\item \code{sub_experiment}: The last modified time for the CV \code{sub_experiment_id}
\item \code{institution}: The last modified time for the CV \code{institution_id}
\item \code{source}: The last modified time for the CV \code{source_id}
\item \code{table}: The last modified time for the CV \code{table_id}
\item \code{frequency}: The last modified time for the CV \code{frequency}
\item \code{grid_label}: The last modified time for the CV \code{grid_label}
\item \code{realm}: The last modified time for the CV \code{realm}
\item \code{source_type}: The last modified time for the CV \code{source_type}
\item \code{req_global_atts}: The last modified time for the CV
\code{required_global_attributes}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-built_time"></a>}}
\if{latex}{\out{\hypertarget{method-built_time}{}}}
\subsection{Method \code{built_time()}}{
Get the time when the dictionary was built
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$built_time()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \link[=POSIXct]{DateTime}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build"></a>}}
\if{latex}{\out{\hypertarget{method-build}{}}}
\subsection{Method \code{build()}}{
Fetch and parse all data of CVs and Data Request
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$build()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The updated \code{CMIP6Dict} itself.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list"></a>}}
\if{latex}{\out{\hypertarget{method-list}{}}}
\subsection{Method \code{list()}}{
List the data for a specific CV or Data Request
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$list(type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{A single string indicating the type of data to list.
Should be one of:
\itemize{
\item \code{"activity"}: The data of CV \code{activity_id}
\item \code{"experiment"}: The data of CV \code{experiment_id}
\item \code{"sub_experiment"}: The data of CV \code{sub_experiment_id}
\item \code{"institution"}: The data of CV \code{institution_id}
\item \code{"source"}: The data of CV \code{source_id}
\item \code{"table"}: The data of CV \code{table_id}
\item \code{"frequency"}: The data of CV \code{frequency}
\item \code{"grid_label"}: The data of CV \code{grid_label}
\item \code{"realm"}: The data of CV \code{realm}
\item \code{"source_type"}: The data of CV \code{source_type}
\item \code{"req_global_atts"}: The data of CV \code{required_global_attributes}
\item \code{"variable"}: The data of Data Request
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
For \code{"activity"}, \code{"experiment"}, \code{"sub_experiment"}, \code{"institution"},
\code{"source"}, \code{"frequency"}, \code{"grid_label"}, \code{"realm"} \code{"source_type"},
and \verb{"variable", }a \link[data.table:data.table]{data.table} object
giving the value of the corresponding CV, its description and other
attributes.

For \code{"table"} and \code{"req_global_atts"}, a character vector giving the
value of the corresponding CV.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update"></a>}}
\if{latex}{\out{\hypertarget{method-update}{}}}
\subsection{Method \code{update()}}{
Update the data for a specific CV or Data Request if applicable

For CVs, \verb{$update()} uses the GitHub RESTful API to fetch the SHA1
value of each JSON file that stores the CV and compares it with the
last fetched value. If any SHA1 is unmatched, the corresponding JSON
file will be downloaded and parsed.

For Data Request, \verb{$update()} fetches the latest tag of the Data
Request Subversion repo and compares it with the last fetched value.
If new tag is found, the corresponding \code{CMIP6_MIP_tables.xlsx}
Microsoft Excel file will be downloaded and parsed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$update()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The \code{CMIP6Dict} object itself with updated data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save"></a>}}
\if{latex}{\out{\hypertarget{method-save}{}}}
\subsection{Method \code{save()}}{
Save the CMIP6Dict object

\verb{$save()} stores all the core data of current \code{CMIP6Dict} object into
a \link[=saveRDS]{RDS} file named \code{CMIP6DICT} in the specified folder.
This file can be reloaded via \verb{$load()} method to restore the last
state of current \code{CMIP6Dict} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$save(dir = getOption("epwshiftr.dir", "."))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir}}{A single string giving the directory to save the RDS file.
Default is set to the global option \code{epwshiftr.dir}. The
directory will be created if not exists. If this global option
is not set, the current working directory is used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A single string giving the full path of the RDS file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-load"></a>}}
\if{latex}{\out{\hypertarget{method-load}{}}}
\subsection{Method \code{load()}}{
Load the saved CMIP6Dict object from file

\verb{$load()} loads the RDS file named \code{CMIP6DICT} that is created using
\verb{$save()} method.

Please note that the file should be exactly the same as \code{CMIP6DICT}
without file extension.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$load(dir = getOption("epwshiftr.dir", "."))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir}}{A single string giving the directory to find the RDS file.
Default is set to the global option \code{epwshiftr.dir}. If this
global option is not set, the current working directory is
used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A single string giving the full path of the RDS file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print a summary of the current \code{CMIP6Dict} object

\verb{$print()} gives the summary of current \code{CMIP6Dict} object including
the version of CVs and Data Request, and the last built time.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CMIP6Dict$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The \code{CMIP6Dict} object itself, invisibly.
}
}
}
